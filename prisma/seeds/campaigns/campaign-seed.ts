import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

export async function seedCampaigns() {
  console.log('üå± Iniciando seed de campanhas...');

  try {
    // Buscar organiza√ß√µes existentes
    const organizations = await prisma.organization.findMany({
      take: 3, // Pegar at√© 3 organiza√ß√µes para distribuir as campanhas
    });

    if (organizations.length === 0) {
      console.log('‚ùå Nenhuma organiza√ß√£o encontrada. Execute o seed de organiza√ß√µes primeiro.');
      return;
    }

    // Buscar usu√°rios existentes
    const users = await prisma.profile.findMany({
      where: {
        role: {
          in: ['admin', 'super_admin']
        }
      },
      take: 3,
    });

    if (users.length === 0) {
      console.log('‚ùå Nenhum usu√°rio admin encontrado. Execute o seed de usu√°rios primeiro.');
      return;
    }

    // Criar campanhas de exemplo mais variadas
    const campaigns = [
      // Campanhas de Seguran√ßa
      {
        name: 'Campanha de Seguran√ßa 2024 - Semestre 1',
        description: 'Campanha semestral focada em conscientiza√ß√£o sobre seguran√ßa no trabalho, incluindo treinamentos sobre uso de EPIs e procedimentos de emerg√™ncia',
        frequency: 'semestral' as const,
        startDate: new Date('2024-01-01'),
        endDate: new Date('2024-06-30'),
        status: 'active' as const,
        organizationId: organizations[0]?.id,
        createdById: users[0]?.id,
      },
      {
        name: 'Campanha de Seguran√ßa 2024 - Semestre 2',
        description: 'Segunda parte da campanha anual de seguran√ßa, focando em preven√ß√£o de acidentes e cultura de seguran√ßa',
        frequency: 'semestral' as const,
        startDate: new Date('2024-07-01'),
        endDate: new Date('2024-12-31'),
        status: 'active' as const,
        organizationId: organizations[0]?.id,
        createdById: users[0]?.id,
      },

      // Campanhas de Sa√∫de Mental
      {
        name: 'Campanha de Sa√∫de Mental - Q1 2024',
        description: 'Campanha trimestral para promo√ß√£o da sa√∫de mental dos colaboradores, incluindo workshops sobre gest√£o de estresse',
        frequency: 'trimestral' as const,
        startDate: new Date('2024-01-01'),
        endDate: new Date('2024-03-31'),
        status: 'completed' as const,
        organizationId: organizations[0]?.id,
        createdById: users[0]?.id,
      },
      {
        name: 'Campanha de Sa√∫de Mental - Q2 2024',
        description: 'Segundo trimestre focado em bem-estar emocional e preven√ß√£o de burnout',
        frequency: 'trimestral' as const,
        startDate: new Date('2024-04-01'),
        endDate: new Date('2024-06-30'),
        status: 'active' as const,
        organizationId: organizations[0]?.id,
        createdById: users[0]?.id,
      },
      {
        name: 'Campanha de Sa√∫de Mental - Q3 2024',
        description: 'Terceiro trimestre com foco em resili√™ncia e habilidades de enfrentamento',
        frequency: 'trimestral' as const,
        startDate: new Date('2024-07-01'),
        endDate: new Date('2024-09-30'),
        status: 'active' as const,
        organizationId: organizations[0]?.id,
        createdById: users[0]?.id,
      },
      {
        name: 'Campanha de Sa√∫de Mental - Q4 2024',
        description: 'Quarto trimestre focado em prepara√ß√£o para o fim do ano e planejamento para 2025',
        frequency: 'trimestral' as const,
        startDate: new Date('2024-10-01'),
        endDate: new Date('2024-12-31'),
        status: 'active' as const,
        organizationId: organizations[0]?.id,
        createdById: users[0]?.id,
      },

      // Campanhas Anuais
      {
        name: 'Campanha Anual de Compliance 2024',
        description: 'Campanha anual para treinamento e atualiza√ß√£o de pol√≠ticas de compliance, incluindo LGPD e √©tica empresarial',
        frequency: 'anual' as const,
        startDate: new Date('2024-01-01'),
        endDate: new Date('2024-12-31'),
        status: 'active' as const,
        organizationId: organizations[0]?.id,
        createdById: users[0]?.id,
      },
      {
        name: 'Campanha de Sustentabilidade 2024',
        description: 'Iniciativa anual para promover pr√°ticas sustent√°veis e responsabilidade ambiental na organiza√ß√£o',
        frequency: 'anual' as const,
        startDate: new Date('2024-03-01'),
        endDate: new Date('2025-02-28'),
        status: 'active' as const,
        organizationId: organizations[0]?.id,
        createdById: users[0]?.id,
      },

      // Campanhas Mensais
      {
        name: 'Campanha de Bem-estar - Janeiro 2024',
        description: 'In√≠cio do ano com foco em resolu√ß√µes de sa√∫de e bem-estar pessoal',
        frequency: 'mensal' as const,
        startDate: new Date('2024-01-01'),
        endDate: new Date('2024-01-31'),
        status: 'completed' as const,
        organizationId: organizations[0]?.id,
        createdById: users[0]?.id,
      },
      {
        name: 'Campanha de Bem-estar - Fevereiro 2024',
        description: 'M√™s do carnaval com foco em equil√≠brio entre trabalho e lazer',
        frequency: 'mensal' as const,
        startDate: new Date('2024-02-01'),
        endDate: new Date('2024-02-29'),
        status: 'completed' as const,
        organizationId: organizations[0]?.id,
        createdById: users[0]?.id,
      },
      {
        name: 'Campanha de Bem-estar - Mar√ßo 2024',
        description: 'M√™s da mulher com foco em empoderamento e igualdade de g√™nero',
        frequency: 'mensal' as const,
        startDate: new Date('2024-03-01'),
        endDate: new Date('2024-03-31'),
        status: 'completed' as const,
        organizationId: organizations[0]?.id,
        createdById: users[0]?.id,
      },

      // Campanhas para outras organiza√ß√µes (se existirem)
      ...(organizations[1] ? [{
        name: 'Campanha de Inova√ß√£o 2024',
        description: 'Campanha semestral para fomentar a criatividade e inova√ß√£o na organiza√ß√£o',
        frequency: 'semestral' as const,
        startDate: new Date('2024-01-01'),
        endDate: new Date('2024-06-30'),
        status: 'active' as const,
        organizationId: organizations[1].id,
        createdById: users[1]?.id || users[0]?.id,
      }] : []),

      ...(organizations[2] ? [{
        name: 'Campanha de Diversidade e Inclus√£o 2024',
        description: 'Iniciativa anual para promover diversidade, equidade e inclus√£o no ambiente de trabalho',
        frequency: 'anual' as const,
        startDate: new Date('2024-01-01'),
        endDate: new Date('2024-12-31'),
        status: 'active' as const,
        organizationId: organizations[2].id,
        createdById: users[2]?.id || users[0]?.id,
      }] : []),
    ];

    let createdCount = 0;
    let existingCount = 0;

    for (const campaignData of campaigns) {
      try {
        const existingCampaign = await prisma.campaign.findFirst({
          where: {
            name: campaignData.name,
            organizationId: campaignData.organizationId,
          },
        });

        if (!existingCampaign) {
          const campaign = await prisma.campaign.create({
            data: campaignData,
          });
          console.log(`‚úÖ Campanha criada: ${campaign.name}`);
          createdCount++;
        } else {
          console.log(`‚è≠Ô∏è Campanha j√° existe: ${campaignData.name}`);
          existingCount++;
        }
      } catch (error) {
        console.error(`‚ùå Erro ao criar campanha ${campaignData.name}:`, error);
      }
    }

    console.log('\nüìä Resumo do Seed de Campanhas:');
    console.log(`‚úÖ Campanhas criadas: ${createdCount}`);
    console.log(`‚è≠Ô∏è Campanhas j√° existentes: ${existingCount}`);
    console.log(`üìà Total de campanhas no sistema: ${await prisma.campaign.count()}`);
    console.log('üéâ Seed de campanhas conclu√≠do com sucesso!');

  } catch (error) {
    console.error('‚ùå Erro ao executar seed de campanhas:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Executar o seed se o arquivo for executado diretamente
if (require.main === module) {
  seedCampaigns();
}
